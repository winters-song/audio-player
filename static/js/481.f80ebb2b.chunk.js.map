{"version":3,"file":"static/js/481.f80ebb2b.chunk.js","mappings":"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","sources":["components/AudioPlayer/styles.ts","components/common/icons.tsx","components/SceneMgr/index.ts","scene/Bar2D/Bar2D.ts","scene/Pixel/Pixel.ts","utils/utils.ts","components/common/constants.ts","components/AudioPlayer/index.tsx","components/PlayList/style.ts","components/PlayList/index.tsx","components/EffectPicker/style.ts","components/EffectPicker/index.tsx","App.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nconst mainColor = \"#f0f0f0\";\n\nexport const PlayerWrapper = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  .audio-player {\n    padding: 0 20px;\n    height: 80px;\n    background-image: linear-gradient(180deg, #00000000 0%, #00000080 100%);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: ${mainColor};\n  }\n\n  .progress-bar{\n    position: absolute;\n    top: -4px;\n    left: 20px;\n    right: 20px;\n\n    .ant-slider{\n      margin: 0;\n\n      .ant-slider-rail {\n        background-color: rgba(255, 255, 255, 0.3);\n        /* background-color: white;\n        box-shadow: 0 0 12px 0px rgb(255 255 255), 0 0 12px 3px rgb(0 210 255), 0 0 20px 0px rgb(0 179 255), 0 0 40px 10px rgb(0 155 255), 0 0 60px 20px rgb(0 155 255); */\n      }\n\n      .ant-slider-track{\n        background-color: ${mainColor};\n      }\n    }\n  }\n\n  .center-bar{\n    width: 240px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-around;\n    z-index: 2;\n    \n    .play-btn{\n      width: 44px;\n      height: 44px;\n      border: 2px solid ${mainColor}; \n      border-radius: 50%;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      cursor: pointer;\n      svg{\n        width: 30px;\n        height: 30px;\n      }\n\n      .icon-play{\n        position: relative;\n        left: 1px;\n      }\n    }\n\n    .pager-btn{\n      width: 44px;\n      height: 44px;\n      border-radius: 50%;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      cursor: pointer;\n      svg{\n        width: 30px;\n        height: 30px;\n      }\n    }\n  }\n\n  .left-bar{\n    position: absolute;\n    left: 20px;\n    text-align: left;\n    display: flex;\n    flex-direction: row;\n\n    .cover{\n      width: 44px;\n      height: 44px;\n      border-radius: 4px;\n      background-size: contain;\n      margin-right: 10px;\n    }\n    .col{\n      display: flex;\n      flex-direction: column;\n    }\n\n    .name{\n      width: 200px;\n      color: white;\n    }\n    \n    .time{\n      margin-top: 5px;\n      color: #ffffff80;\n      font-size: 14px;\n    }\n  }\n\n  .right-bar{\n    position: absolute;\n    right: 20px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    column-gap: 20px;\n\n    .btn{\n      width: 44px;\n      height: 44px;\n      border-radius: 50%;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      cursor: pointer;\n      svg{\n        width: 30px;\n        height: 30px;\n      }\n    }\n\n    .list-btn{\n      svg{\n        width: 28px;\n        height: 28px;\n        position: relative;\n        top: -1px;\n      }\n    }\n\n    .volume-wrapper{\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n\n      .volume-slider{\n        width: 100px;\n\n        .ant-slider-rail {\n          background-color: rgb(255, 255, 255, 0.1);\n        }\n\n        .ant-slider-track{\n          background-color: ${mainColor};\n        }\n      }\n    }\n  }\n  \n`","\nexport const IconPlay = () => (\n  <svg className=\"icon icon-play\" viewBox=\"0 0 1024 1024\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" >\n    <path d=\"M817.088 484.96l-512-323.744C295.232 154.976 282.752 154.592 272.576 160.224 262.336 165.856 256 176.608 256 188.256l0 647.328c0 11.648 6.336 22.4 16.576 28.032 4.8 2.656 10.112 3.968 15.424 3.968 5.952 0 11.904-1.664 17.088-4.928l512-323.616C826.368 533.184 832 522.976 832 512 832 501.024 826.368 490.816 817.088 484.96z\" ></path>\n  </svg>)\n\nexport const IconPause = () => (\n  <svg className=\"icon icon-pause\" viewBox=\"0 0 1024 1024\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" >\n    <path d=\"M341.332992 142.222336c47.128576 0 85.334016 38.20544 85.334016 85.332992v568.889344c0 47.128576-38.20544 85.332992-85.334016 85.332992-47.127552 0-85.332992-38.20544-85.332992-85.332992V227.555328c0-47.128576 38.20544-85.332992 85.332992-85.332992z m341.334016 0c47.127552 0 85.332992 38.20544 85.332992 85.332992v568.889344c0 47.128576-38.20544 85.332992-85.332992 85.332992-47.128576 0-85.334016-38.20544-85.334016-85.332992V227.555328c0-47.128576 38.20544-85.332992 85.334016-85.332992z\" ></path>\n  </svg>)\n\nexport const IconPrev = () => (\n  <svg className=\"icon icon-prev\" viewBox=\"0 0 1024 1024\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" >\n    <path d=\"M341.333333 746.666667a21.333333 21.333333 0 0 1-21.333333 21.333333h-42.666667a21.333333 21.333333 0 0 1-21.333333-21.333333v-469.333334a21.333333 21.333333 0 0 1 21.333333-21.333333h42.666667a21.333333 21.333333 0 0 1 21.333333 21.333333zM768 280.32a32.853333 32.853333 0 0 0-15.786667-27.733333l-5.12-2.56a31.146667 31.146667 0 0 0-34.133333 0l-314.453333 222.293333a32 32 0 0 0-13.653334 26.026667v26.453333a32 32 0 0 0 13.653334 26.026667l314.453333 221.013333a31.146667 31.146667 0 0 0 34.133333 0l5.12-2.56a32.426667 32.426667 0 0 0 15.786667-27.733333z\"></path>\n  </svg>)\n\nexport const IconNext = () => (\n  <svg className=\"icon icon-next\" viewBox=\"0 0 1024 1024\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" >\n    <path d=\"M768 277.333333v469.333334a21.333333 21.333333 0 0 1-21.333333 21.333333h-42.666667a21.333333 21.333333 0 0 1-21.333333-21.333333v-469.333334a21.333333 21.333333 0 0 1 21.333333-21.333333h42.666667a21.333333 21.333333 0 0 1 21.333333 21.333333zM311.04 251.733333a31.146667 31.146667 0 0 0-34.133333 0l-5.12 2.56a32.426667 32.426667 0 0 0-15.786667 26.026667v462.933333a32.853333 32.853333 0 0 0 15.786667 27.733334l5.12 2.56a32 32 0 0 0 34.133333 0l314.453333-221.013334a32 32 0 0 0 13.653334-26.026666v-26.453334a32 32 0 0 0-13.653334-26.026666z\"></path>\n  </svg>)\n\n\nexport const IconVolume = () => (\n  <svg className=\"icon icon-volume\" viewBox=\"0 0 1024 1024\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" >\n    <path d=\"M462.06 142.1L284.12 320H80c-26.52 0-48 21.48-48 48v288c0 26.5 21.48 48 48 48h204.12l177.94 177.9c30.06 30.06 81.94 8.94 81.94-33.94V176.04c0-42.92-51.92-63.96-81.94-33.94zM992 512c0-127.06-64.12-243.88-171.54-312.48-22.38-14.28-52.06-7.64-66.24 14.92s-7.56 52.42 14.82 66.72C848.54 331.94 896 418.22 896 512s-47.46 180.06-126.96 230.84c-22.38 14.28-29 44.14-14.82 66.72 13.02 20.72 42.24 30.28 66.24 14.92C927.88 755.88 992 639.06 992 512z m-283.54-153.74c-23.16-12.66-52.38-4.32-65.22 18.9-12.78 23.22-4.32 52.4 18.9 65.22C687.96 456.56 704 483.26 704 512c0 28.76-16.04 55.44-41.84 69.62-23.22 12.82-31.68 42-18.9 65.22 12.86 23.32 42.1 31.6 65.22 18.9 56.46-31.1 91.54-90 91.54-153.76s-35.08-122.64-91.56-153.72z\"></path>\n  </svg>)\n\n\nexport const IconVolumeMute = () => (\n  <svg className=\"icon icon-volume-mute\" viewBox=\"0 0 1024 1024\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" >\n    <path d=\"M430.06 142.1L252.12 320H48c-26.52 0-48 21.48-48 48v288c0 26.5 21.48 48 48 48h204.12l177.94 177.9c30.06 30.06 81.94 8.94 81.94-33.94V176.04c0-42.92-51.92-63.96-81.94-33.94zM923.28 512l91.28-91.28c12.6-12.6 12.6-33.04 0-45.64l-45.64-45.64c-12.6-12.6-33.04-12.6-45.64 0L832 420.72l-91.28-91.28c-12.6-12.6-33.04-12.6-45.64 0l-45.64 45.64c-12.6 12.6-12.6 33.04 0 45.64L740.72 512l-91.26 91.26c-12.6 12.6-12.6 33.04 0 45.64l45.64 45.64c12.6 12.6 33.04 12.6 45.64 0L832 603.28l91.28 91.28c12.6 12.6 33.04 12.6 45.64 0l45.64-45.64c12.6-12.6 12.6-33.04 0-45.64L923.28 512z\"></path>\n  </svg>)\n\nexport const IconFullscreen = () => (\n  <svg className=\"icon icon-fullscreen\" viewBox=\"0 0 1024 1024\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" >\n    <path d=\"M213.333333 213.333333h213.333334V128H170.666667a42.666667 42.666667 0 0 0-42.666667 42.666667v256h85.333333V213.333333zM170.666667 896h256v-85.333333H213.333333v-213.333334H128v256a42.666667 42.666667 0 0 0 42.666667 42.666667z m725.333333-42.666667v-256h-85.333333v213.333334h-213.333334v85.333333h256a42.666667 42.666667 0 0 0 42.666667-42.666667zM597.333333 213.333333h213.333334v213.333334h85.333333V170.666667a42.666667 42.666667 0 0 0-42.666667-42.666667h-256v85.333333z\" p-id=\"10477\"></path>\n  </svg>)\n\nexport const IconPlayList = () => (\n  <svg className=\"icon icon-play-list\" viewBox=\"0 0 1024 1024\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" >\n    <path d=\"M90.35039205 899.00880511h843.2992159a22.19208431 22.19208431 0 0 0 22.19208552-22.19208553v-44.38416861a22.19208431 22.19208431 0 0 0-22.19208552-22.19208552H90.35039205a22.19208431 22.19208431 0 0 0-22.19208552 22.19208552v44.38416861a22.19208431 22.19208431 0 0 0 22.19208552 22.19208553z m0-310.68918518h843.2992159a22.19208431 22.19208431 0 0 0 22.19208552-22.19208553v-44.38416862a22.19208431 22.19208431 0 0 0-22.19208552-22.19208552H90.35039205a22.19208431 22.19208431 0 0 0-22.19208552 22.19208552v44.38416862a22.19208431 22.19208431 0 0 0 22.19208552 22.19208553z m355.07335381-310.68918519a22.19208431 22.19208431 0 0 1-22.19208431-22.19208552v-44.38416862a22.19208431 22.19208431 0 0 1 22.19208431-22.19208553h488.22586209a22.19208431 22.19208431 0 0 1 22.19208552 22.19208553v44.38416862a22.19208431 22.19208431 0 0 1-22.19208552 22.19208552H445.42374586zM68.15830653 123.04037267a35.50733563 35.50733563 0 0 1 53.12785066-30.82480541l203.61237724 116.35309985a35.50733563 35.50733563 0 0 1 0 61.64961083l-203.61237724 116.35309985A35.50733563 35.50733563 0 0 1 68.15830653 355.74657238V123.04037267z\" ></path>\n  </svg>)\n\nexport const IconLoop = () => (\n  <svg className=\"icon icon-loop\" viewBox=\"0 0 1024 1024\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" >\n    <path d=\"M694.4 854.4H195.2l48 44.8c9.6 6.4 16 16 16 28.8-3.2 19.2-19.2 32-38.4 32-9.6 0-22.4-6.4-28.8-12.8l-108.8-96c-12.8-12.8-16-35.2 0-48L192 704c6.4-6.4 19.2-9.6 28.8-9.6 19.2 0 35.2 16 35.2 35.2 0 9.6-6.4 19.2-12.8 25.6l-41.6 38.4h496c112 0 198.4-89.6 198.4-198.4v-86.4c0-19.2 12.8-32 32-32s32 12.8 32 32v86.4c0 140.8-118.4 259.2-265.6 259.2zM329.6 169.6h496l-48-44.8c-9.6-6.4-16-16-16-28.8 3.2-19.2 19.2-32 38.4-32 9.6 0 22.4 6.4 28.8 12.8l108.8 96c12.8 12.8 16 35.2 0 48L832 320c-6.4 6.4-19.2 9.6-28.8 9.6-19.2 0-35.2-16-35.2-35.2 0-9.6 6.4-19.2 12.8-25.6l41.6-38.4H326.4C217.6 233.6 128 323.2 128 435.2v89.6c0 19.2-12.8 32-32 32s-32-12.8-32-32v-86.4C64 288 182.4 169.6 329.6 169.6z\" p-id=\"2716\"></path>\n  </svg>)\n\n\nexport const IconSingleCycle = () => (\n  <svg className=\"icon icon-single-cycle\" viewBox=\"0 0 1024 1024\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" >\n    <path d=\"M928 476.8c-19.2 0-32 12.8-32 32v86.4c0 108.8-86.4 198.4-198.4 198.4H201.6l41.6-38.4c6.4-6.4 12.8-16 12.8-25.6 0-19.2-16-35.2-35.2-35.2-9.6 0-22.4 3.2-28.8 9.6l-108.8 99.2c-16 12.8-12.8 35.2 0 48l108.8 96c6.4 6.4 19.2 12.8 28.8 12.8 19.2 0 35.2-12.8 38.4-32 0-12.8-6.4-22.4-16-28.8l-48-44.8h499.2c147.2 0 265.6-118.4 265.6-259.2v-86.4c0-19.2-12.8-32-32-32zM96 556.8c19.2 0 32-12.8 32-32v-89.6c0-112 89.6-201.6 198.4-204.8h496l-41.6 38.4c-6.4 6.4-12.8 16-12.8 25.6 0 19.2 16 35.2 35.2 35.2 9.6 0 22.4-3.2 28.8-9.6l105.6-99.2c16-12.8 12.8-35.2 0-48l-108.8-96c-6.4-6.4-19.2-12.8-28.8-12.8-19.2 0-35.2 12.8-38.4 32 0 12.8 6.4 22.4 16 28.8l48 44.8H329.6C182.4 169.6 64 288 64 438.4v86.4c0 19.2 12.8 32 32 32z\" p-id=\"6501\"></path><path d=\"M544 672V352h-48L416 409.6l16 41.6 60.8-41.6V672z\" p-id=\"6502\"></path>\n  </svg>)\n\n\nexport const IconRandom = () => (\n  <svg className=\"icon icon-single-cycle\" viewBox=\"0 0 1024 1024\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" >\n    <path d=\"M844.8 665.6c-6.4-6.4-16-12.8-25.6-9.6-19.2 0-35.2 16-35.2 35.2 0 9.6 6.4 19.2 12.8 25.6l41.6 41.6c-44.8-6.4-86.4-22.4-121.6-51.2-3.2 0-3.2-3.2-6.4-6.4L332.8 304C268.8 233.6 192 195.2 99.2 195.2c-19.2 0-35.2 16-35.2 35.2s16 32 35.2 32c73.6 0 134.4 32 182.4 86.4l384 400 6.4 6.4c48 38.4 108.8 64 172.8 70.4l-48 44.8c-9.6 6.4-16 19.2-16 28.8 0 19.2 19.2 35.2 38.4 32 9.6 0 19.2-6.4 25.6-12.8l99.2-92.8c16-16 16-41.6 0-57.6l-99.2-102.4z m-3.2-556.8c-12.8-16-32-19.2-48-6.4-9.6 6.4-12.8 16-12.8 25.6 0 12.8 3.2 22.4 16 28.8l41.6 41.6c-73.6 9.6-140.8 38.4-192 89.6l-115.2 118.4c-12.8 12.8-12.8 32 0 44.8 6.4 6.4 16 9.6 25.6 9.6s19.2-3.2 25.6-9.6l112-118.4c41.6-38.4 92.8-64 147.2-70.4l-44.8 44.8c-6.4 6.4-12.8 16-12.8 25.6 0 19.2 16 35.2 32 35.2 9.6 0 19.2-3.2 28.8-9.6L950.4 256c12.8-12.8 12.8-35.2 0-48l-108.8-99.2m-438.4 448c-9.6 0-19.2 3.2-25.6 9.6l-118.4 121.6c-48 44.8-96 67.2-160 67.2H96c-19.2 0-35.2 16-35.2 35.2s16 32 35.2 32h3.2c83.2 0 147.2-32 211.2-86.4l121.6-124.8c6.4-6.4 9.6-12.8 9.6-22.4 0-9.6-3.2-16-9.6-22.4-9.6-6.4-19.2-9.6-28.8-9.6z\" p-id=\"2884\"></path>\n  </svg>)","import { ISceneProps } from \"../../models/common\"\nimport Bar2D from \"../../scene/Bar2D/Bar2D\"\nimport Pixel from \"../../scene/Pixel/Pixel\"\n// import TestScene from \"../../scene/Test/TestScene\"\n\n\nconst SceneList = [\n  Bar2D,\n  Pixel\n]\n\nexport default class SceneMgr {\n\n  el: HTMLCanvasElement | null = null\n\n  audioCtx: AudioContext | null = null\n\n  analyser: AnalyserNode | null = null\n\n  scene: any = null\n\n  stats: any = null\n\n  source: MediaStreamAudioSourceNode | null = null\n\n  stream: MediaStream | null = null\n\n  //  ['Bar', 'Pixel', 'Ring']\n  currentEffectMode = 0\n\n  constructor(selector: string) {\n    this.el = document.querySelector(selector);\n    if (!this.el) {\n      throw new Error('找不到 canvas');\n    }\n    this.el.width = window.innerWidth;    \n    this.el.height = window.innerHeight;\n\n\n    // this.stats = new Stats();\n    // this.stats.showPanel( 0 ); // 0: fps, 1: ms, 2: mb, 3+: custom\n    // document.body.appendChild( this.stats.dom );\n\n  }\n\n  visualize(stream: MediaStream) {\n    this.stream = stream;\n    // reuse the analyser whenever switching sounds\n    this.audioCtx = this.audioCtx || new AudioContext()\n    this.analyser = this.analyser || this.audioCtx.createAnalyser();\n\n    if(this.audioCtx && this.analyser){\n\n      // if(this.source){\n      //   this.source.disconnect();\n      // }\n      // 获取音频源\n      this.source = this.audioCtx?.createMediaStreamSource(stream);\n      // 将音频源连接解析器\n      this.source.connect(this.analyser);\n\n      // 准备数据数组\n      this.analyser.fftSize = 256;\n      const bufferLength = this.analyser.frequencyBinCount;\n      console.log(\"bufferLength\", bufferLength);\n      const dataArray = new Uint8Array(bufferLength);\n\n\n      if(!this.scene){\n        this.toggleEffect(this.currentEffectMode)\n      }\n\n      this.scene.init();\n      this.scene.drawEachFrame(dataArray);\n\n    }\n  }\n\n  stopVisualize() {\n    this.scene?.stopVisualize()\n  }\n\n  resetCanvas() {\n    this.scene.resetCanvas();\n  }\n\n  toggleEffect(effectMode: number) {\n    this.currentEffectMode = effectMode\n\n    if(!this.analyser || !this.audioCtx){\n      return \n    }\n    if(this.scene){\n      this.scene.stopVisualize();\n    }\n\n    let params = {\n      el: this.el,\n      analyser: this.analyser,\n      audioCtx: this.audioCtx,\n      stats: this.stats\n    } as ISceneProps\n\n\n    this.scene = new SceneList[this.currentEffectMode](params)\n\n    if(this.stream){\n      this.visualize(this.stream)\n    }\n  }\n\n}","import { IBaseScene, ISceneProps } from \"../../models/common\"\n\n\n\nexport default class Bar2D implements IBaseScene{\n  el: HTMLCanvasElement | null = null\n\n  audioCtx: AudioContext | null = null\n\n  analyser: AnalyserNode | null = null\n\n  frameTimer = 0\n\n  dataLength = 50\n\n  floats: any = [];\n  // 高度\n  FLOAT_HEIGHT = 4;\n  // 下落高度\n  DROP_DISTANCE = 1;\n  // Bar 的 border 宽度\n  BAR_GAP = 2;\n\n  stats: any\n\n  constructor(params: ISceneProps) {\n    Object.assign(this, params)\n  }\n\n  init() {}\n\n  stopVisualize() {\n    if (this.frameTimer) {\n      window.cancelAnimationFrame(this.frameTimer);\n      this.frameTimer = 0\n      this.resetCanvas();\n    }\n  }\n\n  resetCanvas() {\n    if (this.el) {\n      // const emptyDataArray = (new Uint8Array(this.dataLength)).map(() => 0);\n      this.clearFloats();\n      this.clearCanvas();\n      // this.drawFloats(emptyDataArray);\n    }\n  }\n\n  drawEachFrame ( dataArray: Uint8Array) {\n    // 递归调用\n    this.frameTimer = requestAnimationFrame(() => {\n      // this.stats.begin();\n\n      this.drawEachFrame(dataArray)\n\n      // this.stats.end();\n    });\n\n    if (this.analyser) {\n      // 读取数据\n      this.analyser.getByteFrequencyData(dataArray);\n      // 更新长度\n      const bars = dataArray.slice(0, Math.min(this.dataLength, dataArray.length));\n      // console.log(bars)\n      // 画图\n      this.clearCanvas();\n      this.drawFloats(bars);\n      this.drawBars(bars);\n    }\n  }\n\n  clearFloats () {\n    this.floats = [];\n  }\n\n  clearCanvas () {\n    if(!this.el){\n      return\n    }\n    // const canvasWidth = this.el.width;\n    // const canvasHeight = this.el.height;\n    // const canvasCtx = this.el.getContext(\"2d\");\n    // if(!canvasCtx){\n    //   return\n    // }\n    // 绘制图形\n    // canvasCtx.fillStyle = '#222222';\n    // canvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n  }\n\n  drawFloats (dataArray: Uint8Array) {\n    if(!this.el){\n      return\n    }\n    const canvasWidth = this.el.width;\n    const canvasHeight = this.el.height;\n    const canvasCtx = this.el.getContext(\"2d\");\n\n    if (!canvasCtx) {\n      return;\n    }\n\n    // 找到最大值，以及初始化高度\n    dataArray.forEach((item, index) => {\n      // 默认值\n      this.floats[index] = this.floats[index] || this.FLOAT_HEIGHT;\n      // 处理当前值\n      const pushHeight = item + this.FLOAT_HEIGHT;\n      const dropHeight = this.floats[index] - this.DROP_DISTANCE;\n      // 取最大值\n      this.floats[index] = Math.max(dropHeight, pushHeight);\n    })\n\n    const barWidth = canvasWidth / dataArray.length - this.BAR_GAP;\n    let x = 0;\n\n    this.floats.forEach((floatItem: number) => {\n      const floatHeight = floatItem / 128 * canvasHeight / 2;\n\n      canvasCtx.fillStyle = '#bbb';\n      canvasCtx.fillRect(x, canvasHeight - floatHeight, barWidth, this.FLOAT_HEIGHT);\n\n      x += barWidth + this.BAR_GAP;\n    })\n  }\n\n  drawBars ( dataArray: Uint8Array) {\n    if(!this.el){\n      return\n    }\n    const canvasWidth = this.el.width;\n    const canvasHeight = this.el.height;\n    const canvasCtx = this.el.getContext(\"2d\");\n\n    if (!canvasCtx) {\n      return;\n    }\n    const barWidth = canvasWidth / dataArray.length - this.BAR_GAP\n    let x = 0;\n\n    dataArray.forEach((dataItem) => {\n      const barHeight = dataItem / 128 * canvasHeight / 2;\n\n      // 添加渐变色\n      const gradient = canvasCtx.createLinearGradient(canvasWidth / 2, 0, canvasWidth / 2, canvasHeight);\n      // gradient.addColorStop(0, '#68b3ec');\n      // gradient.addColorStop(0.5, '#4b5fc9');\n      // gradient.addColorStop(1, '#68b3ec');\n      gradient.addColorStop(0, 'red');\n      gradient.addColorStop(0.5, 'yellow');\n      gradient.addColorStop(1, 'green');\n\n      // 画 bar\n      canvasCtx.fillStyle = gradient;\n      canvasCtx.fillRect(x, canvasHeight - barHeight, barWidth, barHeight);\n\n      x += barWidth + this.BAR_GAP;\n    })\n  }\n}","import { IBaseScene, ISceneProps } from \"../../models/common\"\n\n\nexport default class Pixel implements IBaseScene{\n  el: HTMLCanvasElement | null = null\n  audioCtx: AudioContext | null = null\n  analyser: AnalyserNode | null = null\n\n  ctx: CanvasRenderingContext2D|null\n  postctx: CanvasRenderingContext2D|null\n\n  frame = 0\n\n  frameTimer = 0\n\n  dataLength = 60\n\n  dataOffset = 5\n\n  gap = 6\n\n  stats: any\n\n  constructor(params: ISceneProps) {\n    Object.assign(this, params)\n\n    this.ctx = document.createElement('canvas').getContext('2d')\n    if(!this.el){\n      this.postctx = null;\n      return;\n    }\n    this.postctx = this.el.getContext('2d') \n  }\n\n  init() {}\n\n  stopVisualize() {\n    if (this.frameTimer) {\n      window.cancelAnimationFrame(this.frameTimer);\n      this.frameTimer = 0\n      this.frame = 0\n      this.resetCanvas();\n    }\n  }\n\n  resetCanvas() {\n    if (this.el) {\n      this.clearCanvas();\n    }\n  }\n\n  clearCanvas () {\n    if(!this.postctx){\n      return\n    }\n    this.postctx.clearRect(0, 0, this.postctx.canvas.width, this.postctx.canvas.height)\n  }\n\n  private draw (dataArray: Uint8Array) {\n    if(!this.el || !this.postctx || !this.ctx){\n      return;\n    }\n    this.frame++\n\n    // Resizing\n    // if (this.postctx.canvas.width !== this.postctx.canvas.offsetWidth || this.postctx.canvas.height !== this.postctx.canvas.offsetHeight) {\n      this.ctx.canvas.width = this.postctx.canvas.width = this.el.width\n      this.ctx.canvas.height = this.postctx.canvas.height = this.el.height\n    // }\n\n    let ctx = this.ctx;\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n\n    let unitWidth = this.el.width / this.dataLength\n    let startX = this.gap\n    let startY = this.el.height * 0.8\n    let dotWidth = unitWidth - this.gap\n\n    const bars = dataArray.slice(this.dataOffset, Math.min(this.dataLength, dataArray.length) + this.dataOffset);\n\n    for (let i = 0; i < this.dataLength; i++) {\n\n      if(!bars[i]){\n        continue;\n      }\n      let count = bars[i] >> 3\n\n      let realX = startX + i * unitWidth\n      // shader part\n      ctx.fillStyle = `hsl(${(this.frame * 0.5 + i * 2) % 360}, 100%, 50%)`\n\n      for(let j = 0; j < count; j++) {\n        let realY = startY - j * unitWidth\n        // 绘制方形点\n        // ctx.fillRect(realX, realY, dotWidth, dotWidth);\n        ctx.beginPath();\n        ctx.roundRect(realX, realY, dotWidth, dotWidth, 3);\n        ctx.fill();\n      }\n    }\n\n    this.postctx.clearRect(0, 0, this.postctx.canvas.width, this.postctx.canvas.height)\n    this.postctx.globalCompositeOperation = 'source-over'\n    this.postctx.drawImage(this.ctx.canvas, 0, 0)\n    this.postctx.globalCompositeOperation = 'lighten'\n    this.postctx.filter = 'blur(4px)'\n    this.postctx.drawImage(this.ctx.canvas, 0, 0)\n    this.postctx.filter = 'blur(0)'\n    this.postctx.globalCompositeOperation = 'source-over'\n\n  }\n\n  public drawEachFrame(dataArray: Uint8Array) {\n    if(!this.el || !this.postctx || !this.ctx){\n      return;\n    }\n    // this.stats.begin();\n\n    if (this.analyser) {\n      // 读取数据\n      this.analyser.getByteFrequencyData(dataArray);\n      this.draw(dataArray)\n    }\n\n    // this.stats.end();\n\n    this.frameTimer = requestAnimationFrame(() => this.drawEachFrame(dataArray))\n  }\n\n}\n","import { PlayListItem } from \"../models/common\";\n\nconst jsmediatags = require('jsmediatags-web');\n\n\nexport const formatTime = (totalSeconds: number): string => {\n  const hours = Math.floor(totalSeconds / 3600);\n  const minutes = Math.floor((totalSeconds % 3600) / 60);\n  const seconds = Math.floor(totalSeconds % 60);\n\n  const displayHours = hours > 0 ? hours.toString().padStart(2, '0') : '';\n  const displayMinutes = minutes.toString().padStart(2, '0');\n  const displaySeconds = seconds.toString().padStart(2, '0');\n\n  return [displayHours, displayMinutes, displaySeconds]\n    .filter(v => v !== '')\n    .join(':')\n}\n\ninterface IAudioInfo {\n  title: string;\n  artist: string;\n  cover: string;\n}\n\nexport const decodeMusic = (file: any) => {\n  return new Promise<IAudioInfo>((resolve, reject) => {\n    jsmediatags.read(file, {\n      onSuccess: function (info: any) {\n        console.log(info)\n        var picture = info.tags.picture;\n        if (picture) {\n          var base64String = '';\n          for (let i = 0; i < picture.data.length; i++) {\n            base64String += String.fromCharCode(picture.data[i]);\n          }\n          var imageUri = 'data:' + picture.format + ';base64,' + btoa(base64String);\n          resolve({\n            title: info.tags.title,\n            artist: info.tags.artist,\n            cover: imageUri\n          })\n        }\n      },\n      onError: function (error: any) {\n        console.error(error);\n        reject(error)\n      }\n    });\n  })\n\n}\n\n\nexport const presetLocalMusic = async (file: string) => {\n\n  return new Promise<PlayListItem>((resolve, reject) => {\n    \n    fetch(file)\n    .then(response => {\n      // 确保请求成功\n      if (!response.ok) {\n        reject('Network response was not ok');\n      }\n      // 将响应转换为 Blob\n      return response.blob();\n    })\n    .then(async (file) => {\n      const blobUrl = URL.createObjectURL(file);\n      const filename = \"Unknown\";\n\n      const params = await decodeMusic(file)\n      resolve({ name: filename, url: blobUrl, ...params })\n    })\n    \n  })\n    \n  \n}\n","\nexport enum PLAY_MODE {\n  LOOP = 0,\n  SINGLE = 1,\n  RANDOM = 2,\n}\n\nexport const TOTAL_PLAY_MODE = 3","import React, { FC, useEffect, useRef, useState } from \"react\"\nimport { PlayerWrapper } from \"./styles\";\nimport { Slider, Typography } from 'antd';\nimport { IconFullscreen, IconLoop, IconNext, IconPause, IconPlay, IconPlayList, IconPrev, IconRandom, IconSingleCycle, IconVolume, IconVolumeMute } from \"../common/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IStore } from \"../../models/common\";\nimport { updateCurrentItem, updatePlayList, updatePlayListVisible, updatePlayMode, updateRandomPlayList } from \"../../store/reducers/common\";\nimport SceneMgr from \"../SceneMgr\";\nimport { formatTime, presetLocalMusic } from \"../../utils/utils\";\nimport { shuffle } from 'lodash';\n\n/**\n * I import the first music by hard coding here, \n * bacause the mp3 decoder only works through Blob\n */\nimport breath from '../../assets/audio/薬師寺寛邦,キッサコ - 呼吸.mp3';\nimport { PLAY_MODE, TOTAL_PLAY_MODE } from \"../common/constants\";\n\nconst {Text} = Typography\n\nconst Audio: FC = () => {\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [volume, setVolume] = useState(Number(localStorage.getItem('volume')) || 0.5);\n  const [duration, setDuration] = useState(0);\n\n  const dispatch = useDispatch()\n  const playList = useSelector((state: IStore) => state.common.playList)\n  const randomPlayList = useSelector((state: IStore) => state.common.randomPlayList)\n  const currentItem = useSelector((state: IStore) => state.common.currentItem)\n  const playListVisible = useSelector((state: IStore) => state.common.playListVisible)\n  const playMode = useSelector((state: IStore) => state.common.playMode)\n  const effectMode = useSelector((state: IStore) => state.common.effectMode)\n\n  const lastVolume = useRef(volume)\n\n  const pageInited = useRef(false)\n  const sceneMgr = useRef<SceneMgr>()\n\n  // toggle between play and pause\n  const handlePlay = () => {\n    if (!currentItem) {\n      return;\n    }\n    if (audioRef.current) {\n      if (isPlaying) {\n        onPause();\n      } else {\n        onPlay();\n      }\n      setIsPlaying(!isPlaying);\n    }\n  }\n\n  const onPlay = async () => {\n    sceneMgr.current?.stopVisualize();\n    await audioRef.current?.play();\n    const audio = audioRef.current as any;\n    const stream = audio.captureStream();\n    sceneMgr.current?.visualize(stream)\n  }\n\n  const onPause = async () => {\n    audioRef.current?.pause();\n    sceneMgr.current?.stopVisualize();\n\n    // sceneMgr.current?.resetCanvas();\n  }\n\n  const handleProgressChange = (value: number) => {\n    if (audioRef.current) {\n      audioRef.current.currentTime = value;\n    }\n  }\n\n  const handleVolumeChange = (value: number) => {\n    if (audioRef.current) {\n      audioRef.current.volume = value;\n      setVolume(value);\n\n      if (value) {\n        lastVolume.current = value\n        localStorage.setItem('volume', value.toString())\n      }\n    }\n  }\n\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      setCurrentTime(audioRef.current.currentTime);\n      setDuration(audioRef.current.duration);\n    }\n  }\n\n  const toggleFullScreen = () => {\n    if (document.fullscreenElement) {\n      document.exitFullscreen();\n    } else {\n      document.documentElement.requestFullscreen();\n    }\n  }\n\n  const onPrev = () => {\n    const list = playMode === PLAY_MODE.RANDOM ? randomPlayList : playList\n\n    const index = list.findIndex((item) => item.url === currentItem?.url);\n    if (index > 0) {\n      dispatch(updateCurrentItem(list[index - 1]))\n    }else{\n      dispatch(updateCurrentItem(list[list.length - 1]))\n    }\n  }\n\n  const onNext = () => {\n    const list = playMode === PLAY_MODE.RANDOM ? randomPlayList : playList\n\n    const index = list.findIndex((item) => item.url === currentItem?.url);\n    if (index < list.length - 1) {\n      dispatch(updateCurrentItem(list[index + 1]))\n    }else{\n      dispatch(updateCurrentItem(list[0]))\n    }\n  }\n\n  const onEnded = () => {\n    if (audioRef.current) {\n      if (playMode === PLAY_MODE.SINGLE) {\n        audioRef.current.currentTime = 0\n        onPlay();\n      }else{\n        onNext();\n      }\n    }\n  }\n\n  const switchPlayMode = (playMode: number) => {\n    const nextMode = (playMode + 1) % TOTAL_PLAY_MODE\n    dispatch(updatePlayMode(nextMode))\n\n  }\n\n  // switch music \n  // (do not trigger before user interact - browser autoplay policy)\n  useEffect(() => {\n    if (pageInited.current) {\n      if (currentItem) {\n        onPlay();\n        setIsPlaying(true)\n      } else {\n        onPause();\n        setIsPlaying(false)\n      }\n    }\n\n  }, [currentItem])\n\n\n\n  useEffect(() => {\n    // load default music\n    presetLocalMusic(breath).then((item) => {\n      dispatch(updatePlayList([...playList, item]))\n      dispatch(updateCurrentItem(item))\n    })\n\n    sceneMgr.current = new SceneMgr('canvas')\n\n    setTimeout(() => {\n      pageInited.current = true\n    }, 1000)\n  }, [])\n\n\n  useEffect(() => {\n    if(playMode === PLAY_MODE.RANDOM){\n      dispatch(updateRandomPlayList(shuffle([...playList])))\n    }\n  }, [playList, playMode])\n\n  useEffect(() => {\n    if(effectMode !== undefined){\n      sceneMgr.current?.toggleEffect(effectMode)\n    }\n  }, [effectMode])\n\n  return (\n    <PlayerWrapper>\n      <audio\n        ref={audioRef}\n        src={currentItem?.url}\n        onTimeUpdate={handleTimeUpdate}\n        onEnded={onEnded}\n      />\n      <div className=\"audio-player\">\n        <div className=\"progress-bar\">\n          <Slider\n            min={0}\n            max={duration}\n            step={0.1}\n            value={currentTime}\n            onChange={handleProgressChange}\n          />\n        </div>\n\n        <div className=\"left-bar\">\n          <div className=\"cover\" style={{\n            backgroundImage: `url(${currentItem?.cover})`\n          }}></div>\n          <div className=\"col\">\n            <Text className=\"name\" ellipsis>{currentItem?.title ? `${currentItem?.title} - ${currentItem?.artist}` : currentItem?.name}</Text>\n            <div className=\"time\">{formatTime(currentTime)} / {formatTime(duration)}</div>\n          </div>\n        </div>\n\n        <div className=\"center-bar\">\n          <div className=\"pager-btn prev-btn\" onClick={onPrev}>\n            <IconPrev />\n          </div>\n          <div className=\"play-btn\" onClick={handlePlay}>\n            {isPlaying ? <IconPause /> : <IconPlay />}\n          </div>\n\n          <div className=\"pager-btn next-btn\" onClick={onNext}>\n            <IconNext />\n          </div>\n        </div>\n\n        <div className=\"right-bar\">\n          <div className=\"volume-wrapper\">\n            <div className=\"btn volume-btn\" onClick={() => handleVolumeChange(volume ? 0 : lastVolume.current)}>\n              {volume === 0 ? <IconVolumeMute /> : <IconVolume />}\n            </div>\n            <Slider\n              className=\"volume-slider\"\n              min={0}\n              max={1}\n              step={0.01}\n              value={volume}\n              onChange={handleVolumeChange}\n            />\n          </div>\n\n          <div className=\"btn mode-btn\" onClick={() => switchPlayMode(playMode)}>\n            {playMode === PLAY_MODE.LOOP && <IconLoop />}\n            {playMode === PLAY_MODE.SINGLE && <IconSingleCycle />}\n            {playMode === PLAY_MODE.RANDOM && <IconRandom />}\n          </div>\n\n          <div className=\"btn list-btn\" onClick={() => dispatch(updatePlayListVisible(!playListVisible))}>\n            <IconPlayList />\n          </div>\n\n          <div className=\"btn fullscreen-btn\" onClick={toggleFullScreen}>\n            <IconFullscreen />\n          </div>\n        </div>\n      </div>\n    </PlayerWrapper>\n  )\n};\n\nexport default Audio;\n\n","import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\n\n\nexport const scrollLight = css`\n  ::-webkit-scrollbar-track-piece{\n    background-color: rgba(255, 255, 255, 0.3);\n    -webkit-border-radius:5px;\n  }\n  ::-webkit-scrollbar{\n    width: 4px;\n    height: 4px;\n  }\n  ::-webkit-scrollbar-thumb:vertical{\n    height:18px;\n    background-color: white;\n    -webkit-border-radius: 8px;\n    outline-offset:-2px;\n  }\n\n  ::-webkit-scrollbar-thumb:horizontal{\n    width: 18px;\n    background-color: #ccc;\n    -webkit-border-radius: 8px;\n  }\n\n  ::-webkit-scrollbar-thumb:hover{\n    height:18px;\n    background-color:#aaa;\n    -webkit-border-radius: 8px;\n  }\n`\n\nexport const ListWrapper = styled.div`\n  position: absolute;\n  right: 20px;\n  top: 50px;\n  bottom: 100px;\n  width: 300px;\n  background-color: rgba(0,0,0,0.4);\n  border-radius: 20px;\n\n  color: #f0f0f0;\n\n  .header{\n    padding: 0 15px;\n    text-align: left;\n    font-weight: 600;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    height: 50px;\n\n    .add-btn{\n      width: 30px;\n      height: 24px;\n      line-height: 22px;\n      text-align: center;\n      border-radius: 5px;\n      border: 1px solid #999;\n      font-size: 24px;\n      font-weight: 400;\n      color: #999;\n      cursor: pointer;\n    }\n  }\n\n  .body{\n    position: absolute;\n    top: 50px;\n    left: 0;\n    right: 0;\n    bottom: 50px;\n    overflow: auto;\n\n    ${scrollLight};\n  }\n\n  .list-item{\n    background-color: #ffffff05;\n    padding: 10px 15px;\n    text-align: left;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    .text{\n      color: #999;\n    }\n\n    .delete-btn{\n      color: #999;\n\n      &:hover{\n        color:#eee;\n      }\n    }\n\n    &.active{\n      background-color: #ffffff10;\n      .text{\n        color: #fff;\n        text-shadow: 0 0 2px #fff;\n      }\n    }\n  }\n\n  .footer{\n    position: absolute;\n    bottom: 0;\n    padding: 15px 0;\n    text-align: center;\n    left: 0;\n    right: 0;\n    color: #ffffff80;\n  }\n`","import React, { ChangeEventHandler } from \"react\"\nimport { ListWrapper } from \"./style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IStore } from \"../../models/common\";\nimport {Typography} from \"antd\";\nimport { updateCurrentItem, updatePlayList } from \"../../store/reducers/common\";\nimport { decodeMusic } from \"../../utils/utils\";\nconst {Text} = Typography\n\nconst PlayList = () => {\n  const dispatch = useDispatch()\n  const list = useSelector((state: IStore) => state.common.playList)\n  const currentItem = useSelector((state: IStore) => state.common.currentItem)\n\n  const fileRef = React.createRef<HTMLInputElement>();\n\n  const handleFileUpload = async (files: FileList) => {\n    const promises = Array.from(files).map(async (file) => {\n      const blobUrl = URL.createObjectURL(file);\n      const filename = file.name.split('.')[0];\n  \n      const params = await decodeMusic(file)\n  \n      return { name: filename, url: blobUrl, ...params };\n    });\n  \n    const newList = await Promise.all(promises);\n    dispatch(updatePlayList([...list, ...newList]));\n  };\n\n  \n  const onUpload: ChangeEventHandler<HTMLInputElement> = (e) => {\n    if (e.target.files) {\n      handleFileUpload(e.target.files);\n    }\n  };\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const files = e.dataTransfer.files;\n    \n    if (files.length > 0) {\n      handleFileUpload(files);\n    }\n  };\n\n  const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  return (\n    <ListWrapper onDrop={handleDrop} onDragOver={handleDragOver}>\n      <div className=\"header\">\n        <div className=\"title\">\n          Play List\n        </div>\n        <div className=\"action\">\n          <div className=\"add-btn\" onClick={(e) => {\n            e.stopPropagation();\n            fileRef.current?.click()\n          }}>\n            +\n          </div>\n          <input style={{display: 'none'}} ref={fileRef} type=\"file\" onChange={onUpload} multiple accept=\"audio/*\"/>\n          <div className=\"btn collapse-btn\">\n\n          </div>\n        </div>\n      </div>\n      <div className=\"body\">\n        <div className=\"list-inner\">\n          {\n            list.map((item: any, index: number) => {\n              return (\n                <div className={`list-item ${currentItem?.url === item.url ? 'active' : ''}`} key={index} \n                onDoubleClick={() => dispatch(updateCurrentItem(item))}>\n                  <Text className=\"text\" ellipsis>\n                    {item.title ? `${item.title} - ${item.artist}` : item.name}\n                  </Text>\n                  <div className=\"delete-btn\" onClick={(e) => {\n                    e.stopPropagation()\n                    let arr = list.slice()\n                    arr.splice(index, 1)\n                    dispatch(updatePlayList(arr))\n                  }}>✕</div>\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n      <div className=\"footer\">\n        <div className=\"note\">drag your music here</div>\n      </div>\n    </ListWrapper>\n  )\n};\n\nexport default PlayList;\n","import styled from \"@emotion/styled\";\n\n\nexport const ListWrapper = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 10px;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: 50px;\n  height: 100px;\n  transform: translateY(-50%);\n  row-gap: 15px;\n  font-family: var(--font-family);\n  .dot{\n    width: 15px;\n    height: 15px;\n    border-radius: 50%;\n    border: 2px solid white;\n    transition: all 0.2s;\n    cursor: pointer;\n    transform: scale(1);\n    &:hover, &.active{\n      box-shadow: inset 0 0 2px 4px white;\n    }\n    &:hover{\n      span{\n        transform: translateX(0);\n        opacity: 1;\n      }\n    }\n\n    span{\n      position: absolute;\n      left: 30px;\n      color: white;\n      width: 100px;\n      text-align: left;\n      line-height: 15px;\n      opacity: 0;\n      transition: all 0.2s 0.1s;\n      transform: translateX(-40px);\n    }\n  }\n`","import React from \"react\"\nimport { ListWrapper } from \"./style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IStore } from \"../../models/common\";\nimport { updateEffectMode } from \"../../store/reducers/common\";\n\n\nconst list = [\n  'Bar Chart',\n  'Pixel Art LED'\n]\n\nconst EffectPicker = () => {\n  const dispatch = useDispatch();\n  const effectMode = useSelector((state: IStore) => state.common.effectMode)\n\n  return (\n    <ListWrapper>\n      {list.map((item, index) => (\n        <div\n          key={index}\n          className={`dot ${index === effectMode ? 'active' : ''}`}\n          onClick={() => dispatch(updateEffectMode(index))}\n        >\n          <span>{item}</span>\n        </div>\n      ))}\n    </ListWrapper>\n  )\n};\n\nexport default EffectPicker;\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport AudioPlayer from './components/AudioPlayer';\nimport PlayList from './components/PlayList';\nimport { useSelector } from 'react-redux';\nimport { IStore } from './models/common';\nimport { Image } from 'antd';\n\nimport donateImg from './assets/img/donate.png';\nimport EffectPicker from './components/EffectPicker';\n\n\nfunction App() {\n  const [visible, setVisible] = useState(false);\n  const playListVisible = useSelector((state: IStore) => state.common.playListVisible)\n\n  return (\n    <div className=\"App\">\n      <canvas id=\"canvas\"/>\n\n      <EffectPicker />\n\n      <AudioPlayer />\n      { playListVisible && <PlayList />}\n\n      <div className=\"links\">\n        <a href=\"mailto:77941075@qq.com\">Email</a>{\" · \"}\n        <div className='link' onClick={() => setVisible(true)}>Donate</div>\n      </div>\n\n      <Image\n        width={200}\n        style={{ display: 'none' }}\n        src=\"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png?x-oss-process=image/blur,r_50,s_50/quality,q_1/resize,m_mfit,h_200,w_200\"\n        preview={{\n          visible,\n          src: donateImg,\n          toolbarRender: () => [<div></div>],\n          onVisibleChange: (value) => {\n            setVisible(value);\n          },\n        }}\n      />\n    </div>\n  );\n} \n\nexport default App;\n"],"names":["mainColor","PlayerWrapper","styled","div","_templateObject","_taggedTemplateLiteral","IconPlay","_jsx","className","viewBox","fill","xmlns","width","height","children","d","IconPause","IconPrev","IconNext","IconVolume","IconVolumeMute","IconFullscreen","IconPlayList","IconLoop","IconSingleCycle","_jsxs","IconRandom","SceneList","constructor","params","el","audioCtx","analyser","frameTimer","dataLength","floats","FLOAT_HEIGHT","DROP_DISTANCE","BAR_GAP","stats","Object","assign","this","init","stopVisualize","window","cancelAnimationFrame","resetCanvas","clearFloats","clearCanvas","drawEachFrame","dataArray","requestAnimationFrame","getByteFrequencyData","bars","slice","Math","min","length","drawFloats","drawBars","canvasWidth","canvasHeight","canvasCtx","getContext","forEach","item","index","pushHeight","dropHeight","max","barWidth","x","floatItem","floatHeight","fillStyle","fillRect","dataItem","barHeight","gradient","createLinearGradient","addColorStop","ctx","postctx","frame","dataOffset","gap","document","createElement","clearRect","canvas","draw","unitWidth","startX","startY","dotWidth","i","count","realX","concat","j","realY","beginPath","roundRect","globalCompositeOperation","drawImage","filter","SceneMgr","selector","scene","source","stream","currentEffectMode","querySelector","Error","innerWidth","innerHeight","visualize","AudioContext","createAnalyser","_this$audioCtx","createMediaStreamSource","connect","fftSize","bufferLength","frequencyBinCount","console","log","Uint8Array","toggleEffect","_this$scene","effectMode","jsmediatags","require","formatTime","totalSeconds","hours","floor","minutes","seconds","toString","padStart","v","join","decodeMusic","file","Promise","resolve","reject","read","onSuccess","info","picture","tags","base64String","data","String","fromCharCode","imageUri","format","btoa","title","artist","cover","onError","error","PLAY_MODE","Text","Typography","Audio","audioRef","useRef","isPlaying","setIsPlaying","useState","currentTime","setCurrentTime","volume","setVolume","Number","localStorage","getItem","duration","setDuration","dispatch","useDispatch","playList","useSelector","state","common","randomPlayList","currentItem","playListVisible","playMode","lastVolume","pageInited","sceneMgr","onPlay","async","_sceneMgr$current","_audioRef$current","_sceneMgr$current2","current","play","captureStream","onPause","_audioRef$current2","_sceneMgr$current3","pause","handleVolumeChange","value","setItem","onNext","list","RANDOM","findIndex","url","updateCurrentItem","useEffect","fetch","then","response","ok","blob","blobUrl","URL","createObjectURL","name","presetLocalMusic","breath","updatePlayList","setTimeout","updateRandomPlayList","shuffle","_sceneMgr$current4","undefined","ref","src","onTimeUpdate","handleTimeUpdate","onEnded","SINGLE","Slider","step","onChange","style","backgroundImage","ellipsis","onClick","onPrev","handlePlay","nextMode","updatePlayMode","switchPlayMode","LOOP","updatePlayListVisible","toggleFullScreen","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","scrollLight","css","ListWrapper","_templateObject2","PlayList","fileRef","React","handleFileUpload","promises","Array","from","files","map","split","newList","all","onDrop","e","preventDefault","stopPropagation","dataTransfer","onDragOver","_fileRef$current","click","display","type","target","multiple","accept","onDoubleClick","arr","splice","EffectPicker","updateEffectMode","visible","setVisible","id","AudioPlayer","href","Image","preview","donateImg","toolbarRender","onVisibleChange"],"sourceRoot":""}